name: Generate collection from MuseScore files

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "public/collection/**"

jobs:
  generate-collection:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get apt dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: jq libegl-dev libasound2 libjack0 librust-gobject-sys-dev libnss3 xvfb
          version: 1.0
      - name: Setup MuseScore AppImage
        run: |
          make download-musescore
          ./musescore_3.6.2.AppImage --appimage-extract
      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install npm dependencies
        run: |
          npm ci
      - name: Copy current collection to temporary folder
        run: |
          cp -r public/collection /tmp/collection

      - name: Make sure any mscz files are in folders with the same name
        run: |
          find /tmp/collection -type f -name "*.mscz" | while read file; do
              filename=$(basename "$file")
              foldername=$(basename "$(dirname "$file")")
              echo "Checking $filename in $foldername"
              if [ "$filename" != "$foldername.mscz" ]; then
                  base=$(basename "$file" .mscz)
                  mkdir -v "$(dirname "$file")/$foldername"
                  mv -v "$file" "$(dirname "$file")/$foldername/$filename"
              fi
          done
      - name: Create MuseScore generator file
        shell: sh
        run: |
          git fetch origin ${{ github.event.pull_request.head.ref }}:${{ github.event.pull_request.head.ref }}
          git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.before }} | grep ".mscz" | jq -R -s 'split("\n") | map(select(.!="") | sub(".mscz";"") | {"in":"\(.).mscz", "out": [[ "\(.)_",".svg"],[ "\(.)_",".midi"],"\(.).midi","\(.).metajson"]})' > media-generation.json
          head media-generation.json
      - name: Create svg, midi and metajson from mscz
        shell: sh
        run: |
          xvfb-run squashfs-root/AppRun -j media-generation.json
          find /tmp/collection/ -type f -name "*.svg" -a -name "*.midi" | head
      - name: Index collection
        run: |
          npm run index-collection -- -i /tmp/collection -o public/collection
      # - uses: EndBug/add-and-commit@v9
      #   with:
      #     message: "chore: generate collection from mscz files (${{github.run_number}})"
      #     add: "public/collection"
      #     branch: ${{ github.ref }}
      #     push: true
      #     author_name: "cadern.in indexer"
      #     author_email: "indexer@cadern.in"
